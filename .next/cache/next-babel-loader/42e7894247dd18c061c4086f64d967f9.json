{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from \"next/link\";\nimport classNames from \"classnames\";\nimport SectionTitleOne from \"../Sections/SectionTitle/SectionTitleOne\";\nimport { shop } from \"../../common/variables\";\nimport { formatCurrency } from \"../../common/utils\";\nimport { setFilterCategory, setFilterBrand, setFilterPriceRange, resetFilter } from \"../../redux/actions/shopActions\";\nexport default function ShopSidebar() {\n  const dispatch = useDispatch();\n  const filterData = useSelector(state => state.shopReducers.filter);\n  useEffect(() => {\n    dispatch(resetFilter());\n  }, []);\n  return __jsx(\"div\", {\n    className: \"shop-sidebar\"\n  }, __jsx(\"div\", {\n    className: \"shop-sidebar__content\"\n  }, __jsx(\"div\", {\n    className: \"shop-sidebar__section -categories\"\n  }, __jsx(SectionTitleOne, {\n    className: \"-medium\",\n    spaceBottom: 30 / 16 + \"em\"\n  }, \"Categories\"), __jsx(\"ul\", null, shop.CATEGORISE.map((item, index) => __jsx(\"li\", {\n    key: index,\n    className: classNames({\n      active: item === filterData.category\n    })\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + \"#\",\n    key: index\n  }, __jsx(\"a\", {\n    onClick: e => {\n      e.preventDefault();\n      dispatch(setFilterCategory(item));\n    }\n  }, item)))))), __jsx(\"div\", {\n    className: \"shop-sidebar__section -refine\"\n  }, __jsx(SectionTitleOne, {\n    className: \"-medium\",\n    spaceBottom: 30 / 16 + \"em\"\n  }, \"Refine Search\"), __jsx(\"div\", {\n    className: \"shop-sidebar__section__item\"\n  }, __jsx(\"h5\", null, \"Brand\"), __jsx(\"ul\", null, shop.BRANDS.map((item, index) => __jsx(\"li\", {\n    key: index\n  }, __jsx(\"label\", {\n    htmlFor: \"b-\" + item\n  }, __jsx(\"input\", {\n    name: \"brand-filter\",\n    type: \"checkbox\",\n    id: \"b-\" + item,\n    value: item,\n    checked: filterData.brand === item,\n    onChange: () => {\n      if (filterData.brand === item) {\n        dispatch(setFilterBrand(\"\"));\n      } else {\n        dispatch(setFilterBrand(item));\n      }\n    }\n  }), item))))), __jsx(\"div\", {\n    className: \"shop-sidebar__section__item\"\n  }, __jsx(\"h5\", null, \"Price\"), __jsx(\"ul\", null, shop.PRICE_POINTS.map((item, index) => {\n    let nextVal = shop.PRICE_POINTS[index + 1];\n\n    if (index === shop.PRICE_POINTS.length - 1) {\n      return;\n    }\n\n    return __jsx(\"li\", {\n      key: index\n    }, __jsx(\"label\", {\n      htmlFor: `f${item}t${nextVal}`\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"price-filter\",\n      id: `f${item}t${nextVal}`,\n      value: `f${item}t${nextVal}`,\n      checked: filterData.priceRange.to === nextVal,\n      onChange: () => {\n        if (filterData.priceRange.to === nextVal) {\n          dispatch(setFilterPriceRange({}));\n        } else {\n          dispatch(setFilterPriceRange({\n            from: item,\n            to: nextVal\n          }));\n        }\n      }\n    }), formatCurrency(item), \" - \", formatCurrency(nextVal)));\n  })))), __jsx(\"div\", {\n    className: \"shop-sidebar__section\"\n  }, __jsx(Link, {\n    href: process.env.PUBLIC_URL + \"/shop/fullwidth-4col\"\n  }, __jsx(\"a\", {\n    className: \"shop-sidebar__section__banner\"\n  }, __jsx(\"img\", {\n    src: process.env.PUBLIC_URL + \"/assets/images/shop/advertisment.png\",\n    alt: \"ads\"\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}