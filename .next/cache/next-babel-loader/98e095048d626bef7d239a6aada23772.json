{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CART } from \"../variables\";\nvar initialState = [];\nexport default function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var cartItem = state.find(function (item) {\n    return item.cartId === action.cartId;\n  });\n  var cartItemIndex = cartItem && state.indexOf(cartItem);\n\n  switch (action.type) {\n    case CART.ADD_TO_CART:\n      if (!action.product.variation || action.product.variation.length === 0) {\n        var addedCartItem = state.find(function (item) {\n          return item.id === action.product.id;\n        });\n        var addedCartItemIndex = addedCartItem && state.indexOf(addedCartItem);\n\n        if (!addedCartItem) {\n          return [].concat(_toConsumableArray(state), [_objectSpread(_objectSpread({}, action.product), {}, {\n            cartQuantity: action.quantity || 1,\n            cartId: uuidv4()\n          })]);\n        } else {\n          return [].concat(_toConsumableArray(state.slice(0, addedCartItemIndex)), [_objectSpread(_objectSpread({}, addedCartItem), {}, {\n            cartQuantity: action.quantity ? addedCartItem.cartQuantity + action.quantity : addedCartItem.cartQuantity + 1\n          })], _toConsumableArray(state.slice(addedCartItemIndex + 1)));\n        }\n      } else {\n        if (!action.color || action.color === \"\") {\n          var _addedCartItem = state.find(function (item) {\n            return item.id === action.product.id;\n          });\n\n          var _addedCartItemIndex = _addedCartItem && state.indexOf(_addedCartItem);\n\n          if (!_addedCartItem) {\n            return [].concat(_toConsumableArray(state), [_objectSpread(_objectSpread({}, action.product), {}, {\n              cartQuantity: action.quantity || 1,\n              cartId: uuidv4()\n            })]);\n          } else {\n            return [].concat(_toConsumableArray(state.slice(0, _addedCartItemIndex)), [_objectSpread(_objectSpread({}, _addedCartItem), {}, {\n              cartQuantity: action.quantity ? _addedCartItem.cartQuantity + action.quantity : _addedCartItem.cartQuantity + 1\n            })], _toConsumableArray(state.slice(_addedCartItemIndex + 1)));\n          }\n        } else {\n          var _addedCartItem2 = state.find(function (item) {\n            return item.id === action.product.id && item.selectedColor && item.selectedColor === action.color;\n          });\n\n          var _addedCartItemIndex2 = _addedCartItem2 && state.indexOf(_addedCartItem2);\n\n          if (!_addedCartItem2) {\n            return [].concat(_toConsumableArray(state), [_objectSpread(_objectSpread({}, action.product), {}, {\n              cartQuantity: action.quantity || 1,\n              selectedColor: action.color,\n              cartId: uuidv4()\n            })]);\n          } else {\n            return [].concat(_toConsumableArray(state.slice(0, _addedCartItemIndex2)), [_objectSpread(_objectSpread({}, _addedCartItem2), {}, {\n              cartQuantity: action.quantity ? _addedCartItem2.cartQuantity + action.quantity : _addedCartItem2.cartQuantity + 1\n            })], _toConsumableArray(state.slice(_addedCartItemIndex2 + 1)));\n          }\n        }\n      }\n\n    case CART.REMOVE_FROM_CART:\n      return [].concat(_toConsumableArray(state.slice(0, cartItemIndex)), _toConsumableArray(state.slice(cartItemIndex + 1)));\n\n    case CART.REMOVE_ALL_FROM_CART:\n      return [];\n\n    case CART.INCREASE_QUANTITY_CART:\n      return [].concat(_toConsumableArray(state.slice(0, cartItemIndex)), [_objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity + 1\n      })], _toConsumableArray(state.slice(cartItemIndex + 1)));\n\n    case CART.DECREASE_QUANTITY_CART:\n      if (cartItem.cartQuantity < 2) {\n        return;\n      }\n\n      return [].concat(_toConsumableArray(state.slice(0, cartItemIndex)), [_objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity - 1\n      })], _toConsumableArray(state.slice(cartItemIndex + 1)));\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}