{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport classNames from \"classnames\";\nimport Slider from \"react-slick\";\nimport Button from \"../../Control/Button\";\nimport { PrevArrow, NextArrow } from \"../../Other/SliderArrow\";\nexport default function SliderTwo(_ref) {\n  var className = _ref.className,\n      data = _ref.data,\n      showArrows = _ref.showArrows,\n      showDots = _ref.showDots;\n\n  var _useState = useState(),\n      sliderIndex = _useState[0],\n      setSliderIndex = _useState[1];\n\n  var _useState2 = useState(),\n      sliderReady = _useState2[0],\n      setSliderReady = _useState2[1];\n\n  useEffect(function () {\n    setSliderIndex(0);\n  }, []);\n  var settings = {\n    dots: showDots,\n    arrows: showArrows,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    fade: true,\n    prevArrow: __jsx(PrevArrow, null),\n    nextArrow: __jsx(NextArrow, null),\n    dotsClass: \"slider-dots container\",\n    customPaging: function customPaging(i) {\n      return __jsx(\"div\", {\n        className: \"slider-dot\"\n      });\n    },\n    onInit: function onInit() {\n      setSliderReady(true);\n    },\n    beforeChange: function beforeChange(oldIndex, newIndex) {\n      setTimeout(function () {\n        setSliderReady(false);\n      }, 10);\n    },\n    afterChange: function afterChange(index) {\n      setSliderIndex(index);\n      setSliderReady(true);\n    }\n  };\n  return __jsx(\"div\", {\n    className: \"slider \".concat(classNames(className))\n  }, __jsx(\"div\", {\n    className: \"slider__carousel\"\n  }, __jsx(Slider, settings, data.map(function (slide, index) {\n    return __jsx(\"div\", {\n      className: \"slider__carousel__item \" + \"slider-\".concat(index + 1),\n      key: index\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"slider-background\"\n    }, __jsx(CSSTransition, {\n      \"in\": sliderIndex === index && sliderReady,\n      timeout: 2000,\n      classNames: \"slider-zoom-in\",\n      unmountOnExit: true\n    }, __jsx(\"img\", {\n      src: process.env.PUBLIC_URL + slide.image,\n      alt: \"Slider image\"\n    }))), __jsx(\"div\", {\n      className: \"slider-content\"\n    }, slide.subTitle && __jsx(\"div\", {\n      className: \"slider-animation-wrapper\"\n    }, __jsx(CSSTransition, {\n      \"in\": sliderIndex === index && sliderReady,\n      timeout: 2000,\n      classNames: classNames(slide.animationClass.subtitle),\n      unmountOnExit: true\n    }, __jsx(\"h5\", {\n      className: \"slider-content__subtitle\"\n    }, slide.subTitle))), __jsx(\"div\", {\n      className: \"slider-animation-wrapper\"\n    }, __jsx(CSSTransition, {\n      \"in\": sliderIndex === index && sliderReady,\n      timeout: 2000,\n      classNames: classNames(slide.animationClass.title),\n      unmountOnExit: true\n    }, __jsx(\"h1\", {\n      className: \"slider-content__title\"\n    }, slide.title.span && __jsx(React.Fragment, null, __jsx(\"span\", null, slide.title.span, \" \"), __jsx(\"br\", null)), slide.title.main))), slide.description && __jsx(\"div\", {\n      className: \"slider-animation-wrapper\"\n    }, __jsx(CSSTransition, {\n      \"in\": sliderIndex === index && sliderReady,\n      timeout: 2000,\n      classNames: classNames(slide.animationClass.description),\n      unmountOnExit: true\n    }, __jsx(\"p\", {\n      className: \"slider-content__description\"\n    }, slide.description))), __jsx(\"div\", {\n      className: \"slider-animation-wrapper\"\n    }, __jsx(CSSTransition, {\n      \"in\": sliderIndex === index && sliderReady,\n      timeout: 2000,\n      classNames: classNames(slide.animationClass.button),\n      unmountOnExit: true\n    }, __jsx(\"div\", null, __jsx(Button, {\n      action: process.env.PUBLIC_URL + \"#\",\n      content: slide.btn.content,\n      color: slide.btn.color\n    })))))));\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}