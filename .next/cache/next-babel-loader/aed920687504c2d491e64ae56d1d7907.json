{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { WISHLIST } from \"../variables\";\nvar initialState = [];\nexport default function wishlistReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var wishlistItem = state.find(function (item) {\n    return item.id === action.productId;\n  });\n  var wishlistItemIndex = wishlistItem && state.indexOf(wishlistItem);\n\n  switch (action.type) {\n    case WISHLIST.ADD_TO_WISHLIST:\n      var addedWishlistItem = state.find(function (item) {\n        return item.id === action.product.id;\n      });\n      var addedWishlistItemIndex = addedWishlistItem && state.indexOf(addedWishlistItem);\n\n      if (!addedWishlistItem) {\n        return [].concat(_toConsumableArray(state), [_objectSpread({}, action.product)]);\n      } else {\n        return [].concat(_toConsumableArray(state.slice(0, addedWishlistItemIndex)), _toConsumableArray(state.slice(addedWishlistItemIndex + 1)));\n      }\n\n    case WISHLIST.REMOVE_FROM_WISHLIST:\n      return [].concat(_toConsumableArray(state.slice(0, wishlistItemIndex)), _toConsumableArray(state.slice(wishlistItemIndex + 1)));\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}